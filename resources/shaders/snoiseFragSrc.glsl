#version 330 core
out vec4 fragColor;uniform vec2 resolution,offset;const vec2 v[8]=vec2[8](vec2(1),vec2(-1,1),vec2(1,-1),vec2(-1),vec2(1,0),vec2(-1,0),vec2(0,1),vec2(0,-1));const float y=(sqrt(3.)-1.)/2.,x=(3.-sqrt(3.))/6.;float t(float x){return mod((34.*x+1.)*x,289.);}float t(vec2 v,vec2 x){return v.x*x.x+v.y*x.y;}vec3 t(vec2 f){vec2 d=floor(f+(f.x+f.y)*vec2(y)),n=f-d+(d.x+d.y)*vec2(x),o=n.x>n.y?vec2(1,0):vec2(0,1),z=n-o+x;f=n-1.+2.*x;vec3 r=vec3(.5-dot(n,n),.5-dot(z,z),.5-dot(f,f)),c=step(vec3(0),r);r=r*c*r;c=vec3(t(t(d.x)+d.y),t(t(d.x+o.x)+d.y+o.y),t(t(d.x+1.)+d.y+1.));c=vec3(t(v[int(c.x)&7],n),t(v[int(c.y)&7],z),t(v[int(c.z)&7],f));d=vec2(dot(r,-2.*vec3(n.x,z.x,f)*c),dot(r,-2.*vec3(n.y,z.y,f.y)*c));float m=dot(r,c);return vec3(m,d);}vec3 f(vec2 v){float c=1.,x=1.,f=0.;vec2 y=vec2(0);for(int r=0;r<4;r++){vec3 d=t(v*x);f+=d.x*c;y+=vec2(d.yz)*c;x*=2.;c*=.5;}return vec3(f,y);}void main(){vec2 v=gl_FragCoord.xy/resolution.xy;fragColor=vec4(f(v+offset),1);}