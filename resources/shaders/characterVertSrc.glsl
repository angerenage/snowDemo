#version 430 core
layout(location=0)in vec3 position;layout(location=1)in vec3 normal;layout(location=2)in uint material;layout(location=3)in uint bone;layout(std430,binding=0)buffer b1{vec3 p[][2];};struct M{vec3 o, a;mat3 i;uint e;};layout(std430,binding=1)buffer b2{M b[];};uniform mat4 projection,view,model;out vec3 fragPos,fragNormal;flat out uint fragMaterial;void main(){uint f=bone;for(fragPos=b[0].o;f!=b[f].e;f=b[f].e)fragPos+=b[b[f].e].i*b[f].o;mat3 c=b[bone].i;p[bone][0]=vec3(model*vec4(fragPos+c*b[bone].a,1));p[bone][1]=vec3(.1,.05,0);fragPos+=c*position;fragMaterial=material;fragNormal=normalize(transpose(inverse(mat3(model)))*c*normal);gl_Position=projection*view*model*vec4(fragPos,1);}