import sys

glyphs = {
	' ': [0000000000, 0000000000, 0000000000, 0000000000, 0000000000],
	'0': [0b00111110, 0b01010001, 0b01001001, 0b01000101, 0b00111110],
	'1': [0000000000, 0b01000010, 0b01111111, 0b01000000, 0000000000],
	'2': [0b01000010, 0b01100001, 0b01010001, 0b01001001, 0b01000110],
	'3': [0b00100001, 0b01000001, 0b01000101, 0b01001011, 0b00110001],
	'4': [0b00011000, 0b00010100, 0b00010010, 0b01111111, 0b00010000],
	'5': [0b00100111, 0b01000101, 0b01000101, 0b01000101, 0b00111001],
	'6': [0b00111100, 0b01001010, 0b01001001, 0b01001001, 0b00110000],
	'7': [0b00000001, 0b01110001, 0b00001001, 0b00000101, 0b00000011],
	'8': [0b00110110, 0b01001001, 0b01001001, 0b01001001, 0b00110110],
	'9': [0b00000110, 0b01001001, 0b01001001, 0b00101001, 0b00011110],
	'a': [0b00100000, 0b01010100, 0b01010100, 0b01010100, 0b01111000],
	'b': [0b01111111, 0b01001000, 0b01000100, 0b01000100, 0b00111000],
	'c': [0b00111000, 0b01000100, 0b01000100, 0b01000100, 0b00100000],
	'd': [0b00111000, 0b01000100, 0b01000100, 0b01001000, 0b01111111],
	'e': [0b00111000, 0b01010100, 0b01010100, 0b01010100, 0b00011000],
	'f': [0b00001000, 0b01111110, 0b00001001, 0b00000001, 0b00000010],
	'g': [0b00011000, 0b10100100, 0b10100100, 0b10100100, 0b01111100],
	'h': [0b01111111, 0b00001000, 0b00000100, 0b00000100, 0b01111000],
	'i': [0000000000, 0b01000100, 0b01111101, 0b01000000, 0000000000],
	'j': [0b01000000, 0b10000000, 0b10000100, 0b01111101, 0000000000],
	'k': [0b01111111, 0b00010000, 0b00101000, 0b01000100, 0000000000],
	'l': [0000000000, 0b01000001, 0b01111111, 0b01000000, 0000000000],
	'm': [0b01111100, 0b00000100, 0b00011000, 0b00000100, 0b01111000],
	'n': [0b01111100, 0b00001000, 0b00000100, 0b00000100, 0b01111000],
	'o': [0b00111000, 0b01000100, 0b01000100, 0b01000100, 0b00111000],
	'p': [0b11111100, 0b00100100, 0b00100100, 0b00100100, 0b00011000],
	'q': [0b00011000, 0b00100100, 0b00100100, 0b00101000, 0b11111100],
	'r': [0b01111100, 0b00001000, 0b00000100, 0b00000100, 0b00001000],
	's': [0b01001000, 0b01010100, 0b01010100, 0b01010100, 0b00100000],
	't': [0b00000100, 0b00111111, 0b01000100, 0b01000000, 0b00100000],
	'u': [0b00111100, 0b01000000, 0b01000000, 0b00100000, 0b01111100],
	'v': [0b00011100, 0b00100000, 0b01000000, 0b00100000, 0b00011100],
	'w': [0b00111100, 0b01000000, 0b00110000, 0b01000000, 0b00111100],
	'x': [0b01000100, 0b00101000, 0b00010000, 0b00101000, 0b01000100],
	'y': [0b00001100, 0b01010000, 0b01010000, 0b01010000, 0b00111100],
	'z': [0b01000100, 0b01100100, 0b01010100, 0b01001100, 0b01000100],
	'A': [0b01111110, 0b00010001, 0b00010001, 0b00010001, 0b01111110],
	'B': [0b01111111, 0b01001001, 0b01001001, 0b01001001, 0b00110110],
	'C': [0b00111110, 0b01000001, 0b01000001, 0b01000001, 0b00100010],
	'D': [0b01111111, 0b01000001, 0b01000001, 0b00100010, 0b00011100],
	'E': [0b01111111, 0b01001001, 0b01001001, 0b01001001, 0b01000001],
	'F': [0b01111111, 0b00001001, 0b00001001, 0b00001001, 0b00000001],
	'G': [0b00111110, 0b01000001, 0b01001001, 0b01001001, 0b01111010],
	'H': [0b01111111, 0b00001000, 0b00001000, 0b00001000, 0b01111111],
	'I': [0000000000, 0b01000001, 0b01111111, 0b01000001, 0000000000],
	'J': [0b00100000, 0b01000000, 0b01000001, 0b00111111, 0b00000001],
	'K': [0b01111111, 0b00001000, 0b00010100, 0b00100010, 0b01000001],
	'L': [0b01111111, 0b01000000, 0b01000000, 0b01000000, 0b01000000],
	'M': [0b01111111, 0b00000010, 0b00001100, 0b00000010, 0b01111111],
	'N': [0b01111111, 0b00000100, 0b00001000, 0b00010000, 0b01111111],
	'O': [0b00111110, 0b01000001, 0b01000001, 0b01000001, 0b00111110],
	'P': [0b01111111, 0b00001001, 0b00001001, 0b00001001, 0b00000110],
	'Q': [0b00111110, 0b01000001, 0b01010001, 0b00100001, 0b01011110],
	'R': [0b01111111, 0b00001001, 0b00011001, 0b00101001, 0b01000110],
	'S': [0b01000110, 0b01001001, 0b01001001, 0b01001001, 0b00110001],
	'T': [0b00000001, 0b00000001, 0b01111111, 0b00000001, 0b00000001],
	'U': [0b00111111, 0b01000000, 0b01000000, 0b01000000, 0b00111111],
	'V': [0b00011111, 0b00100000, 0b01000000, 0b00100000, 0b00011111],
	'W': [0b00111111, 0b01000000, 0b00111000, 0b01000000, 0b00111111],
	'X': [0b01100011, 0b00010100, 0b00001000, 0b00010100, 0b01100011],
	'Y': [0b00000111, 0b00001000, 0b01110000, 0b00001000, 0b00000111],
	'Z': [0b01100001, 0b01010001, 0b01001001, 0b01000101, 0b01000011],
	'-': [0000000000, 0b00010000, 0b00010000, 0b00010000, 0000000000],
	'\"': [0000000000, 0b00000111, 0000000000, 0b00000111, 0000000000],
	'é': [0b00111000, 0b01010100, 0b01010110, 0b01010101, 0b00011000],
	'è': [0b00111000, 0b01010101, 0b01010110, 0b01010100, 0b00011000],
}

texts = {
	"opening": "Appuyez sur Espace pour commencer",
	"credit": "Démo imaginée et développée par Ange Rollet",
	"music_title": "- Musique -",
	"music_credit": "\"\" par ",
	"thanks_title": "- Remerciements spéciaux -",
	"thanks_paris8": "Université Paris 8    -    Farès Belhadj     ",
	"thanks_else": "robobo1221    -    xaot88    "
}

if len(sys.argv) != 3:
	print("Usage: python generate_glyphs.py <output.c> <output.h>")
	sys.exit(1)

c_output = sys.argv[1]
h_output = sys.argv[2]

used_chars = sorted(set("".join(texts.values())))

glyph_list = []
char_to_index = {}

for c in used_chars:
	if c in glyphs and c not in char_to_index:
		char_to_index[c] = len(glyph_list)
		glyph_list.append(glyphs[c])

encoded_texts = {}
for name, text in texts.items():
	encoded = [(char_to_index[c] + 1) for c in text]
	encoded.append(0)
	encoded_texts[name] = encoded

# Write .c
with open(c_output, "w", encoding="utf-8") as f:
	f.write("// Automatically generated file\n")
	f.write('#include "text_data.h"\n\n')
	f.write("const Glyph glyph_data[] = {\n")
	for glyph in glyph_list:
		f.write("\t{ " + ", ".join(f"0b{v:08b}" for v in glyph) + " },\n")
	f.write("};\n\n")
	for name, data in encoded_texts.items():
		f.write(f"const uint8_t text_{name}[] = {{ {', '.join(str(v) for v in data)} }};\n")

# Write .h
with open(h_output, "w", encoding="utf-8") as f:
	f.write("// Automatically generated file\n")
	f.write("#pragma once\n\n")
	f.write("#include <stdint.h>\n\n")
	f.write("typedef uint8_t Glyph[5];\n\n")
	f.write(f"extern const Glyph glyph_data[{len(glyph_list)}];\n\n")
	for name in encoded_texts:
		f.write(f"extern const uint8_t text_{name}[];\n")
